{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tbody = document.querySelector(\"tbody\");\nvar gameScore = document.querySelector(\".game-score\");\nvar button = document.querySelector(\"button\");\nvar messageStart = document.querySelector(\".message-start\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar messageContainer = document.querySelector(\".message-container\");\nvar gameFields = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar score = gameFields.reduce(function(acc, row) {\n    return acc + row.reduce(function(rowSum, cell) {\n        return rowSum + cell;\n    }, 0);\n}, 0);\nvar isStart = false;\nvar isWin = false;\ndocument.addEventListener(\"keydown\", handleKeyPress);\nfunction gameOver() {\n    for(var row = 0; row < gameFields.length; row++)for(var column = 0; column < gameFields[row].length; column++){\n        if (gameFields[row][column] === 0) return;\n        if (column < gameFields[row].length - 1 && gameFields[row][column] === gameFields[row][column + 1]) return;\n        if (row < gameFields.length - 1 && gameFields[row][column] === gameFields[row + 1][column]) return;\n    }\n    messageLose.classList.remove(\"hidden\");\n}\nfunction gameIsWin() {\n    var result = gameFields.some(function(field) {\n        return field.some(function(tile) {\n            return tile === 2048;\n        });\n    });\n    if (result) isWin = true;\n}\nfunction moveTilesRight() {\n    var moved = false;\n    for(var row = 0; row < gameFields.length; row++)for(var column = 1; column < gameFields[row].length; column++){\n        var current = gameFields[row][column];\n        var next = gameFields[row][column - 1];\n        if (next > 0) {\n            if (current === 0) {\n                gameFields[row][column] = next;\n                gameFields[row][column - 1] = 0;\n                column = -1;\n                moved = true;\n            } else if (current === next) {\n                gameFields[row][column] *= 2;\n                gameFields[row][column - 1] = 0;\n                score += gameFields[row][column];\n                moved = true;\n            }\n        }\n    }\n    if (moved) generateRandomNumber();\n}\nfunction moveTilesLeft() {\n    var moved = false;\n    for(var row = 0; row < gameFields.length; row++)for(var column = gameFields[row].length - 1; column >= 0; column--){\n        var current = gameFields[row][column];\n        var next = gameFields[row][column + 1];\n        if (next > 0) {\n            if (current === 0) {\n                gameFields[row][column] = next;\n                gameFields[row][column + 1] = 0;\n                column = gameFields[row].length;\n                moved = true;\n            } else if (current === next) {\n                gameFields[row][column] *= 2;\n                gameFields[row][column + 1] = 0;\n                score += gameFields[row][column];\n                moved = true;\n            }\n        }\n    }\n    if (moved) generateRandomNumber();\n}\nfunction moveTilesUp() {\n    var moved = false;\n    for(var column = 0; column < gameFields[0].length; column++)for(var row = 0; row < gameFields.length - 1; row++){\n        var current = gameFields[row][column];\n        var next = gameFields[row + 1][column];\n        if (next > 0) {\n            if (current === 0) {\n                var ref;\n                ref = [\n                    next,\n                    0\n                ], gameFields[row][column] = ref[0], gameFields[row + 1][column] = ref[1], ref;\n                row = -1;\n                moved = true;\n            } else if (current === next) {\n                gameFields[row][column] *= 2;\n                gameFields[row + 1][column] = 0;\n                score += gameFields[row][column];\n                moved = true;\n            }\n        }\n    }\n    if (moved) generateRandomNumber();\n}\nfunction moveTilesDown() {\n    var moved = false;\n    for(var column = 0; column < gameFields[0].length; column++)for(var row = gameFields.length - 1; row > 0; row--){\n        var current = gameFields[row][column];\n        var next = gameFields[row - 1][column];\n        if (next > 0) {\n            if (current === 0) {\n                gameFields[row][column] = next;\n                gameFields[row - 1][column] = 0;\n                row = gameFields.length;\n                moved = true;\n            } else if (current === next) {\n                gameFields[row][column] *= 2;\n                gameFields[row - 1][column] = 0;\n                score += gameFields[row][column];\n                moved = true;\n            }\n        }\n    }\n    if (moved) generateRandomNumber();\n}\nfunction generateRandomNumber() {\n    var randomCell = Math.floor(Math.random() * 4);\n    var randomRow = Math.floor(Math.random() * 4);\n    while(gameFields[randomCell][randomRow] !== 0){\n        randomCell = Math.floor(Math.random() * 4);\n        randomRow = Math.floor(Math.random() * 4);\n    }\n    var number = Math.random() < 0.1 ? 4 : 2;\n    gameFields[randomCell][randomRow] = number;\n}\nfunction handleKeyPress(ev) {\n    if (isStart) switch(ev.key){\n        case \"ArrowUp\":\n            moveTilesUp();\n            break;\n        case \"ArrowDown\":\n            moveTilesDown();\n            break;\n        case \"ArrowLeft\":\n            moveTilesLeft();\n            break;\n        case \"ArrowRight\":\n            moveTilesRight();\n            break;\n    }\n    render();\n}\nvar render = function() {\n    gameScore.innerHTML = '\\n    <span class=\"game-score\">'.concat(score, \"</span>\\n  \");\n    tbody.innerHTML = \"\";\n    for(var i = 0; i < gameFields.length; i++){\n        var row = document.createElement(\"tr\");\n        row.classList.add(\"field-row\");\n        for(var j = 0; j < gameFields[i].length; j++){\n            var cellValue = gameFields[i][j];\n            var cell = document.createElement(\"td\");\n            cell.textContent = cellValue === 0 ? \"\" : cellValue;\n            cell.classList.add(\"field-cell\");\n            if (cellValue === 0) cell.classList.add(\"field-cell\");\n            else cell.classList.add(\"field-cell--\".concat(cellValue));\n            row.appendChild(cell);\n        }\n        tbody.appendChild(row);\n    }\n    gameOver();\n    gameIsWin();\n    messageWin.classList.toggle(\"hidden\", !isWin);\n    if (!isStart) messageContainer.appendChild(messageStart);\n    else if (messageContainer.contains(messageStart)) messageContainer.removeChild(messageStart);\n};\nbutton.addEventListener(\"click\", function() {\n    isStart = true;\n    gameFields = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    score = 0;\n    button.classList.add(\"restart\");\n    button.textContent = \"Restart\";\n    generateRandomNumber();\n    generateRandomNumber();\n    render();\n});\n\n//# sourceMappingURL=index.3fc72048.js.map\n","'use strict';\n\nconst tbody = document.querySelector('tbody');\n\nconst gameScore = document.querySelector('.game-score');\n\nconst button = document.querySelector('button');\n\nconst messageStart = document.querySelector('.message-start');\n\nconst messageWin = document.querySelector('.message-win');\n\nconst messageLose = document.querySelector('.message-lose');\n\nconst messageContainer = document.querySelector('.message-container');\n\nlet gameFields = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet score = gameFields.reduce((acc, row) => {\n  return acc + row.reduce((rowSum, cell) => rowSum + cell, 0);\n}, 0);\n\nlet isStart = false;\n\nlet isWin = false;\n\ndocument.addEventListener('keydown', handleKeyPress);\n\nfunction gameOver() {\n  for (let row = 0; row < gameFields.length; row++) {\n    for (let column = 0; column < gameFields[row].length; column++) {\n      if (gameFields[row][column] === 0) {\n        return;\n      }\n\n      if (column < gameFields[row].length - 1\n        && gameFields[row][column] === gameFields[row][column + 1]) {\n        return;\n      }\n\n      if (row < gameFields.length - 1\n        && gameFields[row][column] === gameFields[row + 1][column]) {\n        return;\n      }\n    }\n  }\n\n  messageLose.classList.remove('hidden');\n}\n\nfunction gameIsWin() {\n  const result = gameFields.some(field => field.some(tile => tile === 2048));\n\n  if (result) {\n    isWin = true;\n  }\n}\n\nfunction moveTilesRight() {\n  let moved = false;\n\n  for (let row = 0; row < gameFields.length; row++) {\n    for (let column = 1; column < gameFields[row].length; column++) {\n      const current = gameFields[row][column];\n      const next = gameFields[row][column - 1];\n\n      if (next > 0) {\n        if (current === 0) {\n          gameFields[row][column] = next;\n          gameFields[row][column - 1] = 0;\n          column = -1;\n          moved = true;\n        } else if (current === next) {\n          gameFields[row][column] *= 2;\n          gameFields[row][column - 1] = 0;\n          score += gameFields[row][column];\n          moved = true;\n        }\n      }\n    }\n  }\n\n  if (moved) {\n    generateRandomNumber();\n  }\n}\n\nfunction moveTilesLeft() {\n  let moved = false;\n\n  for (let row = 0; row < gameFields.length; row++) {\n    for (let column = gameFields[row].length - 1; column >= 0; column--) {\n      const current = gameFields[row][column];\n      const next = gameFields[row][column + 1];\n\n      if (next > 0) {\n        if (current === 0) {\n          gameFields[row][column] = next;\n          gameFields[row][column + 1] = 0;\n          column = gameFields[row].length;\n          moved = true;\n        } else if (current === next) {\n          gameFields[row][column] *= 2;\n          gameFields[row][column + 1] = 0;\n          score += gameFields[row][column];\n          moved = true;\n        }\n      }\n    }\n  }\n\n  if (moved) {\n    generateRandomNumber();\n  }\n}\n\nfunction moveTilesUp() {\n  let moved = false;\n\n  for (let column = 0; column < gameFields[0].length; column++) {\n    for (let row = 0; row < gameFields.length - 1; row++) {\n      const current = gameFields[row][column];\n      const next = gameFields[row + 1][column];\n\n      if (next > 0) {\n        if (current === 0) {\n          [gameFields[row][column], gameFields[row + 1][column]] = [next, 0];\n          row = -1;\n          moved = true;\n        } else if (current === next) {\n          gameFields[row][column] *= 2;\n          gameFields[row + 1][column] = 0;\n          score += gameFields[row][column];\n          moved = true;\n        }\n      }\n    }\n  }\n\n  if (moved) {\n    generateRandomNumber();\n  }\n}\n\nfunction moveTilesDown() {\n  let moved = false;\n\n  for (let column = 0; column < gameFields[0].length; column++) {\n    for (let row = gameFields.length - 1; row > 0; row--) {\n      const current = gameFields[row][column];\n      const next = gameFields[row - 1][column];\n\n      if (next > 0) {\n        if (current === 0) {\n          gameFields[row][column] = next;\n          gameFields[row - 1][column] = 0;\n          row = gameFields.length;\n          moved = true;\n        } else if (current === next) {\n          gameFields[row][column] *= 2;\n          gameFields[row - 1][column] = 0;\n          score += gameFields[row][column];\n          moved = true;\n        }\n      }\n    }\n  }\n\n  if (moved) {\n    generateRandomNumber();\n  }\n}\n\nfunction generateRandomNumber() {\n  let randomCell = Math.floor(Math.random() * 4);\n  let randomRow = Math.floor(Math.random() * 4);\n\n  while (gameFields[randomCell][randomRow] !== 0) {\n    randomCell = Math.floor(Math.random() * 4);\n    randomRow = Math.floor(Math.random() * 4);\n  }\n\n  const number = Math.random() < 0.1 ? 4 : 2;\n\n  gameFields[randomCell][randomRow] = number;\n}\n\nfunction handleKeyPress(ev) {\n  if (isStart) {\n    switch (ev.key) {\n      case 'ArrowUp':\n        moveTilesUp();\n        break;\n      case 'ArrowDown':\n        moveTilesDown();\n        break;\n      case 'ArrowLeft':\n        moveTilesLeft();\n        break;\n      case 'ArrowRight':\n        moveTilesRight();\n        break;\n    }\n  }\n\n  render();\n}\n\nconst render = () => {\n  gameScore.innerHTML = `\n    <span class=\"game-score\">${score}</span>\n  `;\n\n  tbody.innerHTML = '';\n\n  for (let i = 0; i < gameFields.length; i++) {\n    const row = document.createElement('tr');\n\n    row.classList.add('field-row');\n\n    for (let j = 0; j < gameFields[i].length; j++) {\n      const cellValue = gameFields[i][j];\n      const cell = document.createElement('td');\n\n      cell.textContent = cellValue === 0 ? '' : cellValue;\n      cell.classList.add('field-cell');\n\n      if (cellValue === 0) {\n        cell.classList.add('field-cell');\n      } else {\n        cell.classList.add(`field-cell--${cellValue}`);\n      }\n\n      row.appendChild(cell);\n    }\n\n    tbody.appendChild(row);\n  }\n\n  gameOver();\n  gameIsWin();\n  messageWin.classList.toggle('hidden', !isWin);\n\n  if (!isStart) {\n    messageContainer.appendChild(messageStart);\n  } else if (messageContainer.contains(messageStart)) {\n    messageContainer.removeChild(messageStart);\n  }\n};\n\nbutton.addEventListener('click', () => {\n  isStart = true;\n\n  gameFields = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  score = 0;\n\n  button.classList.add('restart');\n  button.textContent = 'Restart';\n  generateRandomNumber();\n  generateRandomNumber();\n  render();\n});\n"],"names":["tbody","document","querySelector","gameScore","button","messageStart","messageWin","messageLose","messageContainer","gameFields","score","reduce","acc","row","rowSum","cell","isStart","isWin","generateRandomNumber","randomCell","Math","floor","random","randomRow","addEventListener","ev","key","moveTilesUp","moved","column","length","ref","current","next","moveTilesDown","moveTilesLeft","moveTilesRight","render","innerHTML","concat","i","createElement","classList","add","j","cellValue","textContent","appendChild","gameOver","remove","some","field","tile","toggle","contains","removeChild"],"version":3,"file":"index.3fc72048.js.map"}